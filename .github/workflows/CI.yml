name: CI/CD

on:
  push:
    branches:
      - 'ci*'
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
  - cron:  '1 0 * * *'

jobs:
  test:
    name: "🐍 ${{ matrix.python-version }} • ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        # just one for now
        runs-on: [ubuntu-latest]
        python-version: [3.6]

    defaults:
      run:
        shell: "bash -l {0}"

    steps:
    - uses: actions/checkout@master

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: "Get conda"
      uses: "conda-incubator/setup-miniconda@v2"
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: "conda-forge"

    - name: "Test env vars"
      run: |
        conda env list
        conda info
        conda list
    - name: Set env
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
    - name: Test
      run: echo $GITHUB_SHA_SHORT
        

    # - name: "Install conda env from yml"
    #   run: |
    #     conda env list
    #     conda info
    #     conda list
        
    #     conda env create -f conda_env.yml  
    #     conda activate DJC2
        
    #     # normally one would `source docker_env.sh` but GHA can't do this
    #     echo "DEEPJETCORE=$( pwd -P)" >> $GITHUB_ENV
    #     echo "PATH=$( pwd -P)/bin:$PATH" >> $GITHUB_ENV
    #     echo "PYTHONPATH=$( pwd -P)/../:$PYTHONPATH" >> $GITHUB_ENV
    #     echo "LD_LIBRARY_PATH=$( pwd -P)/compiled/" >> $GITHUB_ENV

    #     cd compiled 
    #     make -f Makefile_conda
    #     cd ..
    #     echo "XXXXXXXXXXXXXXXXXXX"
    #     echo $GITHUB_ENV
    #     echo "PWD"
    #     pwd 
    #     echo $DEEPJETCORE
    #     echo $PATH
    #     echo $PYTHONPATH 
    #     echo $LD_LIBRARY_PATH
    #     echo "XXXXXXXXXXXXXXXXXXX"

    #     python createSubpackage.py --data here

    #     # # normally one would `source env.sh` but GHA can't do this
    #     # echo "HERE=/home/runner/work/DeepJetCore/DeepJetCore/here" >> $GITHUB_ENV
    #     # echo "DEEPJETCORE_SUBPACKAGE=$HERE" >> $GITHUB_ENV
    #     # cd $HERE
    #     # echo "PYTHONPATH=$HERE/modules:$PYTHONPATH" >> $GITHUB_ENV
    #     # echo "PYTHONPATH=$HERE/modules/datastructures:$PYTHONPATH" >> $GITHUB_ENV
    #     # echo "PATH=$HERE/scripts:$PATH" >> $GITHUB_ENV
    #     # echo "LD_LIBRARY_PATH=$HERE/modules/compiled:$LD_LIBRARY_PATH" >> $GITHUB_ENV
    #     # echo "PYTHONPATH=$HERE/modules/compiled:$PYTHONPATH" >> $GITHUB_ENV   
          
        
    #     # python bin/convertFromSource.py -i here/example_data/train_files.txt -o here/dctrain -c TrainData_example

    - name: "Run training"
      run: |
        python here/Train/training_example.py here/dctrain/dataCollection.djcdc here/training

    - name: "Run eval"
      run: |
        predict.py here/training/KERAS_model.h5 here/training/trainsamples.djcdc here/example_data/test_files.txt here/out_predict